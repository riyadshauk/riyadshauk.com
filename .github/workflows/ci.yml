name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Setup test environment
      run: |
        echo "DB_USER=test_user" >> $GITHUB_ENV
        echo "DB_PASSWORD=test_password" >> $GITHUB_ENV
        echo "DB_NAME=test_db" >> $GITHUB_ENV
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "NODE_ENV=test" >> $GITHUB_ENV

    - name: Run linting
      run: pnpm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run tests
      run: pnpm run test:ci
      env:
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_db
        DB_HOST: localhost
        DB_PORT: 5432
        NODE_ENV: test

    - name: Build application
      run: pnpm run build
      env:
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_db
        DB_HOST: localhost
        DB_PORT: 5432
        NODE_ENV: test

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run security audit
      run: pnpm audit --audit-level moderate

    - name: Check for known vulnerabilities
      run: |
        if pnpm audit --audit-level high; then
          echo "High severity vulnerabilities found!"
          exit 1
        fi 